/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Productos;

import ClasesAuxiliares.tablas.SetRenderJTableCXC;
import Controlador.Ejemplo;
import Controlador.Usuarios.MarcasDao;
import Controlador.Usuarios.ModelosDao;
import Controlador.Usuarios.ProductosDao;
import Modelo.Marcas;
import Modelo.Modelos;
import Modelo.Productos;
import Vista.Principal;
import Vista.Usuarios.Buscar_usuarios;
import Vista.Usuarios.Crear_Productos;
import Vista.Usuarios.Crear_Usuarios;
import Vlidaciones.ValidaNUmeros;
import java.awt.Desktop;
import java.awt.Image;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class Buscar_Productos extends javax.swing.JInternalFrame {

    /**
     * Creates new form FBUsuarios
     */
    public static Integer indexPositiotoolBar;
    Integer clicJtable = 0;
    Productos usuario1 = new Productos();
    //String sql_allss = "select * from usuarios";
    // String sql_all = "select usuarios.*,tipos_usuarios.tipo from usuarios inner join tipos_usuarios on tipos_usuarios.codigo=usuarios.Tipo_Usuario_codigo order BY usuarios.Nombres LIMIT 0, 50";

    //CUsuarios obj = new CUsuarios();
    public Buscar_Productos() {

        initComponents();

        ProductosDao obj = new ProductosDao();
        //String sql = "select * from usuarios where estado = 'Activo'";
        jTable1.setModel(obj.Buscar_table_only_Activos());
        jTable1.setDefaultRenderer(Object.class, new SetRenderJTableCXC(2));
        this.ocultarFIlasJtableColumnas();

        ///
        // jTable1.setModel(null);
        //jTable1.setEnabled(false);
//        for(Usuarios p: cu.listar() ){            
//    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_producto = new javax.swing.JTextField();
        txt_codigoAlterno = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_codigoBarras = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new JTable();
        btn_Eliminar = new javax.swing.JButton();
        btn_mostrarAll1 = new javax.swing.JButton();
        btn_excel = new javax.swing.JButton();

        setClosable(true);
        setTitle("BUscar Productos");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Producto");

        txt_producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_productoActionPerformed(evt);
            }
        });
        txt_producto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_productoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_productoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_productoKeyTyped(evt);
            }
        });

        txt_codigoAlterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_codigoAlternoKeyReleased(evt);
            }
        });

        jLabel2.setText("Codigo Alterno");

        txt_codigoBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_codigoBarrasKeyReleased(evt);
            }
        });

        jLabel3.setText("Codigo de Barras");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_producto, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(128, 128, 128)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_codigoAlterno, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_codigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_codigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_codigoAlterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 13, 1220, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Listar Productos"));

        jTable1.setBackground(new java.awt.Color(194, 241, 241));
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 104, 1270, 400));

        btn_Eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/ShowAll.png"))); // NOI18N
        btn_Eliminar.setText("Mostrar Todo");
        btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MostrarTodoActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 510, 180, 50));

        btn_mostrarAll1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/deleteUser.png"))); // NOI18N
        btn_mostrarAll1.setText("Eliminar");
        btn_mostrarAll1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_mostrarAll1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 160, 50));

        btn_excel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/icons8-MS Excel-48.png"))); // NOI18N
        btn_excel.setText("Excel");
        btn_excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excelActionPerformed(evt);
            }
        });
        getContentPane().add(btn_excel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 510, 170, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_productoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_productoKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_productoKeyPressed

    private void ocultarFIlasJtableColumnas() {

        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
//        jTable1.getColumnModel().getColumn(7).setMaxWidth(0);
//        jTable1.getColumnModel().getColumn(7).setMinWidth(0);
//        jTable1.getColumnModel().getColumn(7).setPreferredWidth(0);

    }

    private void txt_productoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_productoKeyReleased
        // TODO add your handling code here:
        ProductosDao obj = new ProductosDao();
        jTable1.setModel(obj.Buscar_table("Producto", txt_producto.getText()));
        this.ocultarFIlasJtableColumnas();///

    }//GEN-LAST:event_txt_productoKeyReleased

    private void txt_codigoAlternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoAlternoKeyReleased
        // TODO add your handling code here:
        ProductosDao obj = new ProductosDao();
        jTable1.setModel(obj.Buscar_table("codigoAlterno", txt_codigoAlterno.getText()));
        this.ocultarFIlasJtableColumnas();
        ///
    }//GEN-LAST:event_txt_codigoAlternoKeyReleased

    private void txt_codigoBarrasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoBarrasKeyReleased
        // TODO add your handling code here:
        ProductosDao obj = new ProductosDao();
        jTable1.setModel(obj.Buscar_table("codigoBarras", txt_codigoBarras.getText()));
        this.ocultarFIlasJtableColumnas();
        ///
    }//GEN-LAST:event_txt_codigoBarrasKeyReleased

    private Integer llenarjcbSelectedItemMarca(String name) {
        Integer codigo_Mrca = null;
        //Productos onj = new Productos();
        MarcasDao objDao = new MarcasDao();
        ArrayList<Marcas> lista = new ArrayList<Marcas>();
        lista = (ArrayList<Marcas>) objDao.listar();
        for (Marcas marca1 : lista) {
            if (marca1.getMarca().equals(name)) {
                codigo_Mrca = marca1.getCodigo();
                Object ob;
                ob = name;
                //Crear_Usuarios.jcb_tipo.setSelectedItem(0);
                Crear_Productos.setItemSelectMarcas = ob;

                //    System.out.println("Vista.Usuarios.Buscar_usuarios.llenarjcbSelectedItem()" + tipo_Usuario.getTipo());
            }

        }

        return codigo_Mrca;
    }

    private Integer llenarjcbSelectedItemModelo(String name) {
        Integer codigo_Modelo = null;
        //Productos onj = new Productos();
        ModelosDao objDao = new ModelosDao();
        ArrayList<Modelos> lista = new ArrayList<Modelos>();
        lista = (ArrayList<Modelos>) objDao.listar();
        for (Modelos obj2 : lista) {
            if (obj2.getModelo().equals(name)) {
                codigo_Modelo = obj2.getCodigo();
                Object ob;
                ob = name;
                //Crear_Usuarios.jcb_tipo.setSelectedItem(0);
                Crear_Productos.setItemSelectModelo = ob;

                //  System.out.println("Vista.Usuarios.Buscar_usuarios.llenarjcbSelectedItem()" + mode.getTipo());
            }

        }

        return codigo_Modelo;
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        clicJtable = 1;

        Crear_Usuarios.actualizarSiNO = "si";
        //Double clicked
        if (evt.getClickCount() == 2) {
            Productos usuario = new Productos();
            ProductosDao objDao = new ProductosDao();
            Crear_Productos obj_crea = new Crear_Productos();
            //jTable1.setShowHorizontalLines(true);
            // jTable1.setSelectionForeground(Color.ORANGE);
            jTable1.setShowVerticalLines(true);
            //jTable1.setBackground(Color.red);
            JTable table = (JTable) evt.getSource();
            int row = table.getSelectedRow();
            int col = table.getSelectedColumn();
            //obtengo el codigo del usuario
            String Valor = table.getValueAt(row, 0).toString();
            System.out.println("VALOR CODIGO : " + Valor);
            //mando a buscar la informacion del usuaruio con el codigo obtenido dle evento click
            usuario = objDao.buscarConID(Integer.parseInt(Valor));
            usuario1 = usuario;
            System.err.println(usuario.getGarantia());
            System.err.println(usuario.getIva12());

            System.out.println("-------------------------------------------------------###########################--------------");
            //lleno el fomulario 
            obj_crea.txt_codigo.setText(String.valueOf(usuario.getCodigo()));
            obj_crea.txt_producto.setText(usuario.getProducto());
            obj_crea.txt_codigoAlternativo.setText(usuario.getCodigoAlterno());
            obj_crea.txt_codigoBarras.setText(usuario.getCodigoBarras());
            obj_crea.txt_costo.setText(usuario.getCosto());
            obj_crea.txt_garantia.setText(usuario.getGarantia());
            obj_crea.txt_maximosok.setText(usuario.getMaximo());
            obj_crea.txt_mminimosok.setText(usuario.getMinimo());
            obj_crea.txt_observacion.setText(usuario.getObservacion());
            obj_crea.txt_pvp.setText(usuario.getPvp());
            obj_crea.txt_percha.setText(usuario.getUbicacion());
            obj_crea.txt_unidades.setText(usuario.getUnidades());
            obj_crea.txt_utilidad.setText(usuario.getUtilidad());
            if (usuario.getImagen() != null) {
                ImageIcon icon = new ImageIcon(usuario.getImagen());
                Icon icono = new ImageIcon(icon.getImage().getScaledInstance(251, 205, Image.SCALE_DEFAULT));
                obj_crea.lbl_img.setText(null);
                obj_crea.lbl_img.setIcon(icono);
            } else {
                obj_crea.lbl_img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/producto.jpg")));
            }

            if (usuario.getGarantia().contains("MESES")) {

                String numero = ValidaNUmeros.buscarNumeroIntoString(usuario.getGarantia());
                obj_crea.txt_garantia.setText(numero);
                obj_crea.chek_anos.setSelected(false);
                obj_crea.chekMeses.setSelected(true);
            }
            if (usuario.getGarantia().contains("ANOS")) {
                String numero = ValidaNUmeros.buscarNumeroIntoString(usuario.getGarantia());
                obj_crea.txt_garantia.setText(numero);
                obj_crea.chek_anos.setSelected(true);
                obj_crea.chekMeses.setSelected(false);
            }
            if (usuario.getGarantia().contains("SIN GARANTIA")) {
                obj_crea.chekMeses.setSelected(false);
                obj_crea.chek_anos.setSelected(false);
                //obj_crea.txt_garantia.setText(1);
            }
            //////////////////graba iva si o no ////////
            System.err.println(usuario.getIva12());
            if (usuario.getIva12().equals(0.0)) {
                obj_crea.radIvaNo.setSelected(true);
            } else {
                obj_crea.radIvaSI.setSelected(true);
            }
            //////////PRODUCTO SERVICIO O ACTIVO FIJO
            if (usuario.getProductoOServicio().equals(1)) {
                obj_crea.radProducto.setSelected(true);
            } else if (usuario.getProductoOServicio().equals(2)) {
                obj_crea.radServicio.setSelected(true);
            } else {
                obj_crea.radActivoFijo.setSelected(true);
            }
            ////////////P1 P2 P3 ...N
            obj_crea.txt_p1.setText(usuario.getP1().toString());
            obj_crea.txt_p2.setText(usuario.getP2().toString());
            obj_crea.txt_p3.setText(usuario.getP3().toString());
            Double costo = Double.parseDouble(usuario.getCosto());
            obj_crea.lbl_p1.setText(String.valueOf(((costo * usuario.getP1()) / 100) + costo));
            obj_crea.lbl_p2.setText(String.valueOf(((costo * usuario.getP2()) / 100) + costo));
            obj_crea.lbl_p3.setText(String.valueOf(((costo * usuario.getP2()) / 100) + costo));
            ///

//llenasmos JCBOX marcas        
            Marcas obj = new Marcas();
            MarcasDao a = new MarcasDao();
            obj = a.buscarConID(usuario.getModelos_marcas_codigo());
            Crear_Productos.txt_marca.setText(obj.getMarca());
            //this.llenarjcbSelectedItemMarca(obj.getMarca());
//llenasmos JCBOX Modelos
            Modelos objm = new Modelos();
            ModelosDao abjmDao = new ModelosDao();
            objm = abjmDao.buscarConID(usuario.getModelo_codigo());
            Crear_Productos.txt_categorias.setText(objm.getModelo());

            obj_crea.jButton1.setText("Actualizar");
            Principal.desktopPane.add(obj_crea);
            obj_crea.setVisible(true);

        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void txt_productoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_productoKeyTyped
        // TODO add your handling code here:
//        ValidaNUmeros val = new ValidaNUmeros();
//        val.keyTyped(evt);
    }//GEN-LAST:event_txt_productoKeyTyped

    private void btn_excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excelActionPerformed
        // TODO add your handling code here:
        Thread t = new Thread() {

            public void run() {
                XSSFWorkbook workbook = new XSSFWorkbook();
                // XSSFSheet hoja = workbook.createSheet("Productos");
                Sheet hoja = workbook.createSheet("Productos");
                //XSSFRow fila = hoja.createRow(0);
                Row fila = hoja.createRow(0);
                CellStyle style = workbook.createCellStyle();
                style.setFillBackgroundColor(IndexedColors.AQUA.getIndex());

                
                fila.createCell(0).setCellValue("Num");
                fila.createCell(1).setCellValue("Codigo");
                fila.setHeightInPoints(23);
                fila.createCell(2).setCellValue("CODIGO DE BARRAS");
                fila.createCell(3).setCellValue("NOMBRE DEL PRODUCTO");
                fila.createCell(4).setCellValue("COSTO");
                fila.createCell(5).setCellValue("UTILIDAD");
                fila.createCell(6).setCellValue("PVP");
                fila.createCell(7).setCellValue("CANTIDAD");
                fila.createCell(8).setCellValue("MAXIMOS");
                fila.createCell(9).setCellValue("MINIMOS");
                Principal.jProgressBar2.setMaximum(jTable1.getRowCount());
                //XSSFRow filas;
                Row filas;
                Principal.jProgressBar2.setStringPainted(true);

                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    jTable1.setRowSelectionInterval(i, i);

                    Principal.jProgressBar2.setValue(i + 1);
                    filas = hoja.createRow(i + 1);
                    filas.createCell(0).setCellValue(i + 1);
                    filas.createCell(1).setCellValue(jTable1.getValueAt(i, 0).toString());
                    filas.createCell(2).setCellValue(jTable1.getValueAt(i, 1).toString());
                    filas.createCell(3).setCellValue(jTable1.getValueAt(i, 2).toString());
                    filas.createCell(4).setCellValue(jTable1.getValueAt(i, 3).toString());
                    filas.createCell(5).setCellValue(jTable1.getValueAt(i, 4).toString());
                    filas.createCell(6).setCellValue(jTable1.getValueAt(i, 5).toString());
                    filas.createCell(7).setCellValue(jTable1.getValueAt(i, 6).toString());
                    filas.createCell(8).setCellValue(jTable1.getValueAt(i, 7).toString());
                    filas.createCell(9).setCellValue(jTable1.getValueAt(i, 8).toString());
                    Principal.jProgressBar2.setString("Esxportando Productos del Sistema a Excel...");
                    try {
                        Thread.sleep(20);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Buscar_usuarios.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                Principal.jProgressBar2.setValue(0);
                Principal.jProgressBar2.setString("");
                Date now = new java.util.Date();
                try {
                    System.out.println("Now : " + now);
                    //workbook.write(new FileOutputStream(new File("C:\\sofi\\temp\\productos.xlsx")));
                    workbook.write(new FileOutputStream(new File(Ejemplo.productosFileExample)));
                    try {
                        File path = new File(Ejemplo.productosFileExample);
                        Desktop.getDesktop().open(path);
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        ;

        };
        t.start();

////        if (jTable1.getRowCount() < 0) {
////            JFileChooser chooser = new JFileChooser();
////            FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de excel", "xls");
////            chooser.setFileFilter(filter);
////            chooser.setDialogTitle("Guardar archivo");
////            chooser.setAcceptAllFileFilterUsed(false);
////            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
////                List<JTable> tb = new ArrayList();
////                List<String> nom = new ArrayList();
////                tb.add(jTable1);
////                nom.add("Compras por factura");
////                String file = chooser.getSelectedFile().toString().concat(".xls");
////                try {
////                    Exporter e = new Exporter(new File(file), tb, nom);
////
////                    if (e.export()) {
////                        JOptionPane.showMessageDialog(null, "Los datos fueron exportados a excel en el directorio seleccionado", "Mensaje de Informacion", JOptionPane.INFORMATION_MESSAGE);
////                    }
////                } catch (Exception e) {
////                    JOptionPane.showMessageDialog(null, "Hubo un error " + e.getMessage(), " Error", JOptionPane.ERROR_MESSAGE);
////                }
////            }
////        } else {
////            JOptionPane.showMessageDialog(this, "No hay datos para exportar", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
////        }
    }//GEN-LAST:event_btn_excelActionPerformed

    private void btn_MostrarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MostrarTodoActionPerformed
        // TODO add your handling code here:
        ProductosDao objDao = new ProductosDao();

        jTable1.setModel(objDao.Buscar_table_only_Activos());
        this.ocultarFIlasJtableColumnas();
        ///
    }//GEN-LAST:event_btn_MostrarTodoActionPerformed

    private void btn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EliminarActionPerformed
        // TODO add your handling code here:

        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "COnfirmar la Eliminacon del registor ", "Eliminar Producto", dialogButton);
        if (dialogResult == 0) {
            ProductosDao obj1 = new ProductosDao();
            try {
                if (clicJtable == 1) {
                    obj1.eliminar(usuario1);
                    ProductosDao obj = new ProductosDao();

                    jTable1.setModel(obj.Buscar_table_only_Activos());
                    this.ocultarFIlasJtableColumnas();
                }
            } catch (Exception ex) {
                Logger.getLogger(Buscar_usuarios.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

        }
    }//GEN-LAST:event_btn_EliminarActionPerformed

    private void txt_productoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_productoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_productoActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:

    }//GEN-LAST:event_formInternalFrameClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Eliminar;
    private javax.swing.JButton btn_excel;
    private javax.swing.JButton btn_mostrarAll1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_codigoAlterno;
    private javax.swing.JTextField txt_codigoBarras;
    private javax.swing.JTextField txt_producto;
    // End of variables declaration//GEN-END:variables

}
