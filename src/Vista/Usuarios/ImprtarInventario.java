/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Usuarios;

import ClasesAuxiliares.DropXlsx;
import ClasesAuxiliares.excel.PegarExcelIntoJtable;
import ClasesAuxiliares.excel.importdesdeExcel;
import Controlador.Ejemplo;
import Controlador.Usuarios.ClientesDao;
import Controlador.Usuarios.HoraFecha;
import Controlador.Usuarios.KardexDao;
import Controlador.Usuarios.MarcasDao;
import Controlador.Usuarios.ModelosDao;
import Controlador.Usuarios.ProductosDao;
import Modelo.Clientes;
import Modelo.Kardex;
import Modelo.Marcas;
import Modelo.Modelos;
import Modelo.Productos;
import Vista.Principal;
import static Vista.Usuarios.PagoCredito.jDateChooser1;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author USUARIO
 */
public class ImprtarInventario extends javax.swing.JInternalFrame {

    boolean validacionOk = false;
    public static Integer indexPositiotoolBar;
    JTable tabla;
    DefaultTableModel modelo;
    JFileChooser selector;

    Workbook libro_xls;
    XSSFWorkbook libro_xlslx;
    // ArrayList<Marcas> lista_Marcas = new ArrayList<Marcas>();
    // ArrayList<Modelos> lista_Modelos = new ArrayList<Modelos>();
    Integer codigoMarca = -1;
    Integer codigoModelo = -1;
    /**
     * Creates new form ImprtarInventario
     */
    Date fecha = new Date();

    public ImprtarInventario() {
        initComponents();
        lblBodeaga.setText(Principal.bodegaPredeterminadaenCOmpra);
        HoraFecha ob2 = new HoraFecha();
        fecha = ob2.obtenerFecha();
        jDateChooser1.setDate(fecha);
        DropXlsx dropXlsx = new DropXlsx();
        dropXlsx.setJtable(jTable1);
//        MarcasDao objMarcasDao = new MarcasDao();
//        lista_Marcas = objMarcasDao.listar();
//        ModelosDao objModeloDao = new ModelosDao();
//        lista_Modelos = objModeloDao.listar();
       // new PegarExcelIntoJtable(jTable1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txt = new javax.swing.JTextField();
        chek_productos = new javax.swing.JCheckBox();
        chek_clientes = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        btnguardar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblBodeaga = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setClosable(true);
        setTitle("Importar Inventario");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13", "Title 14", "Title 15", "Title 16", "Title 17", "Title 18", "Title 19", "Title 20"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        new PegarExcelIntoJtable(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 81, 1164, 318));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Ver Formato");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Seleccionar Archivo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        chek_productos.setText("Productos");
        chek_productos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chek_productosItemStateChanged(evt);
            }
        });

        chek_clientes.setText("Clientes");
        chek_clientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chek_clientesItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chek_productos)
                    .addComponent(chek_clientes))
                .addGap(97, 97, 97))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(chek_productos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chek_clientes)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnguardar.setBackground(new java.awt.Color(0, 153, 51));
        btnguardar.setText("Guardar ");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        jButton3.setText("Validar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btnguardar)
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnguardar, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, 240, 60));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel1.setText("Bodega que sumara el inventario");

        lblBodeaga.setBackground(new java.awt.Color(255, 153, 153));
        lblBodeaga.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lblBodeaga.setForeground(new java.awt.Color(0, 102, 102));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(lblBodeaga, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBodeaga, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 20, 230, 60));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/ok.png"))); // NOI18N
        jMenu1.setText("Importar");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem2.setText("Clientes");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setText("Inventario");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Cancelar");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:

    }//GEN-LAST:event_formInternalFrameClosed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenu1ActionPerformed

    public boolean validaBodegas() {
        if ( chek_productos.isSelected()) {
        //if(jTable1.getValueAt(i, 14).toString().)    
            int col = jTable1.getColumnCount();
            int row = jTable1.getRowCount();
            for (int i = 0; i < row; i++) {

                if (jTable1.getValueAt(i, 14).toString().equalsIgnoreCase("")) {
                    JOptionPane.showMessageDialog(null, "Error no existe bodega de Destino");
                    return false;
                }
            }

        }
        if(chek_clientes.isSelected()){
        
        }
        return true;
    }
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

//    public void cargarArchivo() {
//        Sheet hoja1 = libro_xls.getSheetAt(0);
//        String[][] datos;
//        String[] nomcolumnas;
//        datos = new String[hoja1.][hoja1.getLastRowNum()];
//        nomcolumnas = new String[hoja1.getColumns()];
//        for (int fila = 0; fila < hoja1.getRows(); fila++) {
//            for (int columna = 0; columna < hoja1.getColumns(); columna++) {
//                datos[fila][columna] = hoja1.getCell(columna, fila).getContents();
//                nomcolumnas[columna] = "" + columna;
//            }
//        }
//        DefaultTableModel modelonuevo = new DefaultTableModel(datos, nomcolumnas);
//        tabla.setModel(modelonuevo);
//    }
//
//    public void cargarArchivoxlxsx() {
//        Sheet hoja1 = libro_xls.getSheet(0);
//        String[][] datos;
//        String[] nomcolumnas;
//        datos = new String[hoja1.getRows()][hoja1.getColumns()];
//        nomcolumnas = new String[hoja1.getColumns()];
//        for (int fila = 0; fila < hoja1.getRows(); fila++) {
//            for (int columna = 0; columna < hoja1.getColumns(); columna++) {
//                datos[fila][columna] = hoja1.getCell(columna, fila).getContents();
//                nomcolumnas[columna] = "" + columna;
//            }
//        }
//       DefaultTableModel modelonuevo = new DefaultTableModel(datos, nomcolumnas);
//        tabla.setModel(modelonuevo);
//    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        selector = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("xls y xlsx", "xlsx", "xls");
        selector.setFileFilter(filtro);
        int op = selector.showOpenDialog(this);
        if (op == JFileChooser.APPROVE_OPTION) {
            try {
                importdesdeExcel.Prueba(selector.getSelectedFile());
                jTable1.setModel(importdesdeExcel.modelonuevo);
            } catch (Exception e1) {
                e1.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        // TODO add your handling code here:
        if (chek_productos.isSelected()) {

            if (validacionOk) {

                Integer codProucto = null;
                Productos p = new Productos();
                Kardex k = new Kardex();
                Marcas ma = new Marcas();
                Modelos mo = new Modelos();
                int col = jTable1.getColumnCount();
                int row = jTable1.getRowCount();
                // if(!jTable1.getValueAt(0, 0).toString().isEmpty()){
                Double utilidad = null;
                Double p1 = null;
                Double p2 = null;
                Double p3 = null;
                Integer cantidad = 0;
                String costoformat = null;
                String baseformat = null;
                String utilidadFormat = null;
                String iva12valformat = null;
                for (int i = 0; i < row; i++) {

                    KardexDao kDao = new KardexDao();
                    ProductosDao pDao = new ProductosDao();
                    MarcasDao maDao = new MarcasDao();
                    ModelosDao moDao = new ModelosDao();
                    p.setCodigoAlterno(jTable1.getValueAt(i, 0).toString());
                    p.setCodigoBarras(jTable1.getValueAt(i, 1).toString());
                    p.setProducto(jTable1.getValueAt(i, 2).toString());
                    p.setPvp(jTable1.getValueAt(i, 5).toString().replace(",", "."));
                    p.setBodegaPredCompra(baseformat);

                    if (Double.parseDouble(jTable1.getValueAt(i, 3).toString()) > 0) {
                        p.setIva0(0.0);
                        Double costo = Double.parseDouble(jTable1.getValueAt(i, 4).toString().replace(",", "."));
                        Double pvp = Double.parseDouble(jTable1.getValueAt(i, 5).toString().replace(",", "."));
                        Double base = costo / ((Double.parseDouble(Principal.iva) / 100) + 1);
                        Double iva12valor = costo - base;
                        utilidad = pvp - costo;
                        costoformat = String.valueOf(String.format("%.4f", costo).replace(",", "."));
                        baseformat = String.valueOf(String.format("%.4f", base).replace(",", "."));
                        utilidadFormat = String.valueOf(String.format("%.4f", utilidad).replace(",", "."));
                        iva12valformat = String.valueOf(String.format("%.4f", iva12valor).replace(",", "."));
                        p.setImpuesto("IVA " + jTable1.getValueAt(i, 3).toString().replace(",", "."));
                        p.setIva12(Double.parseDouble(iva12valformat.replace(",", ".")));
                        p.setBase(Double.parseDouble(baseformat.replace(",", ".")));
                        p.setCosto(costoformat.replace(",", "."));
                        p.setProductoOServicio(1);
                        p.setUtilidad(utilidadFormat.replace(",", "."));
                        if (jTable1.getValueAt(i, 6).toString().equals("")) {
                            p1 = 0.0;
                        } else {
                            p1 = Double.parseDouble(jTable1.getValueAt(i, 6).toString().replace(",", "."));
                        }
                        if (jTable1.getValueAt(i, 7).toString().equals("")) {
                            p2 = 0.0;
                        } else {
                            p2 = Double.parseDouble(jTable1.getValueAt(i, 7).toString().replace(",", "."));
                        }
                        if (jTable1.getValueAt(i, 8).toString().equals("")) {
                            p3 = 0.0;
                        } else {
                            p3 = Double.parseDouble(jTable1.getValueAt(i, 8).toString().replace(",", "."));
                        }
                        Double porcentajeUtil = p1 - costo;
                        porcentajeUtil = (porcentajeUtil * 100) / costo;
                        Double percent = Double.parseDouble(String.valueOf(String.format("%.4f", porcentajeUtil)).replace(",", "."));
                        p.setP1(percent);
                        porcentajeUtil = p2 - costo;
                        porcentajeUtil = (porcentajeUtil * 100) / costo;
                        percent = Double.parseDouble(String.valueOf(String.format("%.4f", porcentajeUtil).replace(",", ".")));
                        p.setP2(percent);
                        porcentajeUtil = p3 - costo;
                        porcentajeUtil = (porcentajeUtil * 100) / costo;
                        percent = Double.parseDouble(String.valueOf(String.format("%.4f", porcentajeUtil).replace(",", ".")));
                        p.setP3(percent);
                    } else if (jTable1.getValueAt(i, 3).toString().contains("0.0")) {
                        p.setImpuesto("IVA 0");
                        Double pvp = Double.parseDouble(jTable1.getValueAt(i, 5).toString().replace(",", "."));
                        Double costo = Double.parseDouble(jTable1.getValueAt(i, 4).toString().replace(",", "."));
                        costoformat = String.valueOf(String.format("%.4f", costo).replace(",", "."));
                        p.setIva12(0.0);
                        p.setIva0(0.0);
                        p.setCosto(costoformat);
                        p.setBase(Double.parseDouble(costoformat.replace(",", ".")));
                        utilidad = pvp - costo;
                        utilidadFormat = String.valueOf(String.format("%.4f", utilidad).replace(",", "."));
                        p.setUtilidad(utilidadFormat.replace(",", "."));
                        if (jTable1.getValueAt(i, 6).toString().equals("")) {
                            p1 = 0.0;
                        } else {
                            p1 = Double.parseDouble(jTable1.getValueAt(i, 6).toString().replace(",", "."));
                        }
                        if (jTable1.getValueAt(i, 7).toString().equals("")) {
                            p2 = 0.0;
                        } else {
                            p2 = Double.parseDouble(jTable1.getValueAt(i, 7).toString().replace(",", "."));
                        }
                        if (jTable1.getValueAt(i, 8).toString().equals("")) {
                            p3 = 0.0;
                        } else {
                            p3 = Double.parseDouble(jTable1.getValueAt(i, 8).toString().replace(",", "."));
                        }
                        Double porcentajeUtil = p1 - costo;
                        porcentajeUtil = (porcentajeUtil * 100) / costo;
                        Double percent = Double.parseDouble(String.valueOf(String.format("%.4f", porcentajeUtil).replace(",", ".")));
                        p.setP1(percent);
                        porcentajeUtil = p2 - costo;
                        porcentajeUtil = (porcentajeUtil * 100) / costo;
                        percent = Double.parseDouble(String.valueOf(String.format("%.4f", porcentajeUtil)).replace(",", "."));
                        p.setP2(percent);
                        porcentajeUtil = p3 - costo;
                        porcentajeUtil = (porcentajeUtil * 100) / costo;
                        percent = Double.parseDouble(String.valueOf(String.format("%.4f", porcentajeUtil)).replace(",", "."));
                        p.setP3(percent);
                    }
//            if (jTable1.getValueAt(i, 9).toString().equals("")) {
//                p.setCantidad(cantidad);
//            } else {
//                cantidad = Integer.valueOf(jTable1.getValueAt(i, 9).toString());
//                p.setCantidad(cantidad);
//            }
////            if (jTable1.getValueAt(i, 14).toString().equals("")) {
////                p.setBodegaPredCompra("0-No");
////                k.setBodega("1");
////                p.setObservacion(jTable1.getValueAt(i, 14).toString() + "\n " + "0-No hayBodegaPredeterminada del prodcuto " + jTable1.getValueAt(i, 13).toString() + " en el archivo de importacion");
////            } else 
//{
                    int bodega = (int) Double.parseDouble(jTable1.getValueAt(i, 14).toString());
                    String bodegaS = String.valueOf(bodega);
                    p.setBodegaPredCompra(bodegaS);
                    p.setObservacion(bodegaS + " - Predeterminada del prodcuto " + jTable1.getValueAt(i, 2).toString() + " desde el archivo de importacion");
                    //          }
                    p.setUnidades(jTable1.getValueAt(i, 10).toString());

                    ////////////////// MARCAS Y CATEGORIAS CODIGO 
                    String txtmarca = jTable1.getValueAt(i, 12).toString();
                    String txtmodelo = jTable1.getValueAt(i, 11).toString();
                    if (txtmarca.equals("")) {
                        txtmarca = "GENERAL";
                    }
                    if (txtmodelo.equals("")) {
                        txtmodelo = "GENERAL";
                    }
                    if (!txtmarca.isEmpty()) {
                        codigoMarca = -1;
                        Marcas marca = new MarcasDao().buscarConMarca(txtmarca);
                        if (marca.getMarca() != null) {
                            codigoMarca = marca.getCodigo();
                        }

                        if (codigoMarca == -1) {
                            Marcas m = new Marcas();
                            MarcasDao mDao = new MarcasDao();
                            m.setMarca(txtmarca);
                            m.setDescripcion("Auto-importado");
                            codigoMarca = mDao.guardar(m);

                            /////////////////categorias
                            if (!txtmodelo.isEmpty()) {
                                codigoModelo = -1;
                                Modelos molo = new ModelosDao().buscarConModelo(txtmodelo); //Modelos model;
                                if (molo.getModelo() != null) {
                                    codigoModelo = molo.getCodigo();
                                }

                                if (codigoModelo == -1) {
                                    Modelos mod = new Modelos();
                                    ModelosDao modDao = new ModelosDao();
                                    mod.setModelo(txtmodelo);
                                    mod.setMarcas_Codigo(codigoMarca);
                                    mod.setDescripcion("Auto-importadao");
                                    codigoModelo = modDao.guardar(mod);
                                }
                            }
/////////////////////////

                        } else {

                            /////////////////categorias
                            if (!txtmodelo.isEmpty()) {
                                codigoModelo = -1;
                                Modelos molo = new ModelosDao().buscarConModelo(txtmodelo); //Modelos model;
                                if (molo.getModelo() != null) {
                                    codigoModelo = molo.getCodigo();
                                }
                                if (codigoModelo == -1) {
                                    Modelos mod = new Modelos();
                                    ModelosDao modDao = new ModelosDao();
                                    mod.setModelo(txtmodelo);
                                    mod.setMarcas_Codigo(codigoMarca);
                                    mod.setDescripcion("Auto");
                                    codigoModelo = modDao.guardar(mod);
                                }

                            }
                        }
                    }

                    p.setModelo_codigo(codigoModelo);
                    p.setModelos_marcas_codigo(codigoMarca);
                    ////////kardex///////////
                    Date fecha1 = new HoraFecha().obtenerFecha();
                    k.setFecha(fecha1);
                    if (Principal.metodoValoracionInventario == 1) {
                        k.setBodega(bodegaS);
                        k.setDetalle("INVENTARIO INICIAL IMPORTADO ");
                        k.setOutcantidad("0");
                        k.setIncantidad(jTable1.getValueAt(i, 9).toString());
                        k.setIncosto(costoformat);
                        k.setInpvp(jTable1.getValueAt(i, 5).toString().replace(",", "."));
                        k.setSaldocantidad(jTable1.getValueAt(i, 9).toString().replace(",", "."));
                        Double saldoCosto = Double.parseDouble(costoformat) * (cantidad);
                        String saldoCantformat = String.valueOf(String.format("%.4f", saldoCosto).replace(",", "."));
                        k.setSaldocosto(jTable1.getValueAt(i, 6).toString().replace(",", "."));

                        k.setSaldopvp(jTable1.getValueAt(i, 8).toString().replace(",", "."));
                        //k.setFecha(fecha);

                        codProucto = pDao.guardar(p);

                        k.setProductos_Codigo(codProucto);
                    } else if (Principal.metodoValoracionInventario == 2) {

                    }
                    if (codProucto != 0) {
                        kDao.guardar(k);
                    }

                }
            } else {
                JOptionPane.showMessageDialog(null, "NOSE HA INICIADO LA VALIDACION DEL ARCHIVO");
            }
//        } else {
//            JOptionPane.showMessageDialog(null, "Active la casilla Productos ");
        }

///////////
        if (chek_clientes.isSelected()) {

//            p.setCodigoAlterno(jTable1.getValueAt(i, 0).toString());
//            p.setCodigoBarras(jTable1.getValueAt(i, 1).toString());
//            p.setProducto(jTable1.getValueAt(i, 2).toString());
//            p.setPvp(jTable1.getValueAt(i, 5).toString().replace(",", "."));
            Integer codCliente = null;
            Clientes c = new Clientes();

            int col = jTable1.getColumnCount();
            int row = jTable1.getRowCount();
            for (int i = 0; i < row; i++) {
                ClientesDao cDao = new ClientesDao();
                c.setNacimiento("");
                c.setCedula(jTable1.getValueAt(i, 0).toString());
                c.setNombre(jTable1.getValueAt(i, 1).toString());
                c.setEmpresa(jTable1.getValueAt(i, 2).toString());
                c.setDireccion(jTable1.getValueAt(i, 3).toString());
                c.setTelefono(jTable1.getValueAt(i, 4).toString());
                c.setCelular(jTable1.getValueAt(i, 5).toString());
                c.setMail(jTable1.getValueAt(i, 6).toString());
                c.setCiudad(jTable1.getValueAt(i, 7).toString());
                c.setProvincia(jTable1.getValueAt(i, 8).toString());
                c.setObservaciones(jTable1.getValueAt(i, 9).toString() + "\n" + jTable1.getValueAt(i, 10).toString());
                c.setTipoCliente(0);
                cDao.guardar(c);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Active la casilla Clientes");
        }
    }//GEN-LAST:event_btnguardarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (validaBodegas()) {
            validacionOk = true;
        } else {
            validacionOk = false;
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void chek_productosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chek_productosItemStateChanged
        // TODO add your handling code here:
        if (chek_productos.isSelected()) {
            chek_clientes.setSelected(false);
        }
    }//GEN-LAST:event_chek_productosItemStateChanged

    private void chek_clientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chek_clientesItemStateChanged
        // TODO add your handling code here:
        if (chek_clientes.isSelected()) {
            chek_productos.setSelected(false);
        }
    }//GEN-LAST:event_chek_clientesItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (chek_productos.isSelected()) {
            try {
                File file = new File(Ejemplo.fileForamtoProductosexcel);
                if (file.exists()) {
                    Path origenPath = FileSystems.getDefault().getPath(Ejemplo.fileForamtoProductosexcel);
                    Path destinoPath = FileSystems.getDefault().getPath(Ejemplo.fileTEMPForamtoProductosexcel);
                    File path = new File(Ejemplo.fileTEMPForamtoProductosexcel);
                    if (path.exists()) {
                        path.delete();
                    }
                    Files.copy(origenPath, destinoPath, StandardCopyOption.REPLACE_EXISTING);

                    Desktop.getDesktop().open(path);
                } else {
                    JOptionPane.showMessageDialog(null, "NO existe Archvo en : " + file.getAbsolutePath(), "ERROR AL ECNONTRAR ARCHIVO", 0);
                }

            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        if (chek_clientes.isSelected()) {
            try {
                File file = new File(Ejemplo.fileForamtoClientesExcel);
                if (file.exists()) {
                    Path origenPath = FileSystems.getDefault().getPath(Ejemplo.fileForamtoClientesExcel);
                    Path destinoPath = FileSystems.getDefault().getPath(Ejemplo.fileTEMPForamtoClientesExcel);
                    File path = new File(Ejemplo.fileTEMPForamtoClientesExcel);
                    if (path.exists()) {
                        path.delete();
                    }
                    Files.copy(origenPath, destinoPath, StandardCopyOption.REPLACE_EXISTING);
                    Desktop.getDesktop().open(path);
                } else {
                    JOptionPane.showMessageDialog(null, "NO existe Archvo en : " + file.getAbsolutePath(), "ERROR AL ECNONTRAR ARCHIVO", 0);
                }

            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnguardar;
    private javax.swing.JCheckBox chek_clientes;
    private javax.swing.JCheckBox chek_productos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBodeaga;
    private javax.swing.JTextField txt;
    // End of variables declaration//GEN-END:variables
}
