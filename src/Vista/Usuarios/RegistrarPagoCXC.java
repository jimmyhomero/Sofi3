/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Usuarios;

import ClasesAuxiliares.NewSql.Forms.OperacionesForms;
import ClasesAuxiliares.Variables;
import Controlador.Usuarios.CajasDetalleDao;
import Controlador.Usuarios.FacturasDao;
import Controlador.Usuarios.FormasPagoVDao;
import Controlador.Usuarios.HoraFecha;
import Controlador.Usuarios.PagosDao;
import Controlador.Usuarios.cxcDao;
import Controlador.Usuarios.TicketsDao;
import Controlador.cheques.BancosDao;
import Modelo.Bancos;
import ClasesAuxiliares.debug.Deb;
import Modelo.Cajas;
import Modelo.CajasDetalle;
import Modelo.Facturas;
import Modelo.Cxc;
import Modelo.FormasPagoV;
import Modelo.Pagos;
import Modelo.Tickets;
import Vista.Dialogs.PagoConChequex;
import Vista.Principal;
import Vlidaciones.ValidaNUmeros;
import java.awt.Frame;
import ClasesAuxiliares.debug.Deb;
import Controlador.ComitsAll;
import Controlador.Usuarios.ClientesDao;
import Modelo.Cheques;
import Modelo.Clientes;
import Modelo.Depositos;
import Modelo.FormasPagoCV;
import Vista.Dialogs.PagoConChequeRRRRRR;
import Vista.Dialogs.PagoDepositos;
import static Vista.Usuarios.Buscar_cxc.jTable1;
import static Vista.Usuarios.Buscar_cxc.restropagocxcCxpexitoso;
import Vlidaciones.ProgressBar;
import java.util.ArrayList;
import login.login;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import org.codehaus.groovy.ast.stmt.DoWhileStatement;

/**
 *
 * @author operador
 */
public class RegistrarPagoCXC extends javax.swing.JInternalFrame {

    //ArrayList<FormasPagoV> listaFormasDePago = new ArrayList<FormasPagoV>();
    FormasPagoCV FormasdePagoSeleccionada = new FormasPagoCV();
    double total;
    double abono;
    double saldo;
    public static Facturas fac = new Facturas();
    public static Tickets t = new Tickets();
    Integer codigoFactura;
    public static Integer codigocxc;
    public static Integer codigoCliente;
    public static String tipoDocumento = "";
    public static String secuenciaFac = "";
    public static String referecia = "";
    boolean isclicked = false;
    Date fecha = new Date();
    public static boolean esllamadodesdeBuscarCXC = false;
    public static Cheques cheque = new Cheques();
    public static Depositos deposito = new Depositos();
    //public static boolean sediocliclikenguardatransaccion = false;
    ArrayList<FormasPagoCV> fp = new ArrayList<>();

    /**
     * Creates new form RefistrarPagoCXC
     */
    public RegistrarPagoCXC() {
        initComponents();
        HoraFecha ob2 = new HoraFecha();
        jdfecha.setDate(ob2.obtenerFechamascienanos());
        Buscar_cxc.restropagocxcCxpexitoso = false;
        Buscar_cxp.restropagocxpCxpexitoso = false;

////        spinerDiasCredito.setValue(30);
////        HoraFecha ob2 = new HoraFecha();
////        fecha = ob2.obtenerFecha();
////        jDateChooser1.setDate(fecha);
////        
////        jDateChooser1.setDate(sumarRestarDiasFecha(fecha, Integer.valueOf(spinerDiasCredito.getValue().toString())));
////        txt_entrada.grabFocus();        
////        txt_entrada.selectAll();
////        
        ////formas de pago
        fp = OperacionesForms.FormasPagoCXC_seExceptualaformadePago_Credito(jComboBox1);

//OperacionesForms.getAllComponents(this)
//        jComboBox1.setSelectedItem(Principal.formadepagopredeterminada);
        /// HoraFecha.fecha(fecha)
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txt_total = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_saldo = new javax.swing.JTextField();
        txt_entrada = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bnt_siguente = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDetalle = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        txt_nombre = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jdfecha = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        bnt_siguente1 = new javax.swing.JButton();

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("REGISTRAR PAGO"));

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txt_total.setEditable(false);

        jLabel1.setText("VALOR CREDITO");

        txt_saldo.setEditable(false);

        txt_entrada.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_entrada.setText("0.00");
        txt_entrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_entradaKeyReleased(evt);
            }
        });

        jLabel2.setText("VALOR");

        jLabel3.setText("SALDO ");

        bnt_siguente.setBackground(new java.awt.Color(0, 204, 102));
        bnt_siguente.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        bnt_siguente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pago.png"))); // NOI18N
        bnt_siguente.setText("GUARDAR PAGO");
        bnt_siguente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_siguenteActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("DESCRIPCION"));

        txtDetalle.setColumns(20);
        txtDetalle.setRows(5);
        jScrollPane1.setViewportView(txtDetalle);

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txt_nombre.setEditable(false);
        txt_nombre.setBackground(new java.awt.Color(255, 204, 204));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_nombre)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addContainerGap())
        );

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel9.setText("FORMA PAGO");

        jdfecha.setEnabled(false);
        jdfecha.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setText("FECHA:");

        bnt_siguente1.setBackground(new java.awt.Color(255, 0, 51));
        bnt_siguente1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        bnt_siguente1.setText("CANCELAR");
        bnt_siguente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_siguente1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_total)
                                    .addComponent(jComboBox1, 0, 202, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_saldo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(txt_entrada, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jdfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(bnt_siguente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(bnt_siguente1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bnt_siguente, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bnt_siguente1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_total)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_entrada, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_saldo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jdfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("REGISTRO PAGO CXC", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 979, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bnt_siguente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_siguente1ActionPerformed
        // TODO add your handling code here:

        this.dispose();
    }//GEN-LAST:event_bnt_siguente1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void registrarPago() {

        Deb.consola("forma de pago" + jComboBox1.getSelectedItem());

        Deb.consola("forma de pagoxxxxx" + jComboBox1.getSelectedItem());
        Deb.consola(jComboBox1.getSelectedItem());
        Clientes cli = new Clientes();
        ClientesDao clidao = new ClientesDao();
        cli = clidao.buscarConID(codigoCliente);

        if (!fp.isEmpty()) {
            for (FormasPagoCV f : fp) {

                //Deb.consolaX(f.getCodigo().toString());
                if (f.getTipoPago().equalsIgnoreCase(OperacionesForms._CHEQUE_TEXT) && jComboBox1.getSelectedItem().equals(f.getFormaPago())) {

                    FormasdePagoSeleccionada = f;

                    Frame frame = JOptionPane.getFrameForComponent(this);
                    PagoConChequeRRRRRR pcdialog = new PagoConChequeRRRRRR(frame, true);
                    pcdialog.formaPago = jComboBox1.getSelectedItem().toString();
                    OperacionesForms.registrarPagocheque(pcdialog, txt_entrada.getText(), cli, secuenciaFac, OperacionesForms._FORMA_PAGO_CXC_TEXT);
                    pcdialog.setLocationRelativeTo(frame);

                    if (esllamadodesdeBuscarCXC) {
                        RegistrarPagoscxc();
                        FormasdePagoSeleccionada = null;
                        
                        esllamadodesdeBuscarCXC = false;
                    } else {

                    }

                } else if (f.getTipoPago().equalsIgnoreCase(OperacionesForms._EFECTIVO_TEXT) && jComboBox1.getSelectedItem().equals(f.getFormaPago())) {
                    FormasdePagoSeleccionada = f;
                    if (esllamadodesdeBuscarCXC) {
                        RegistrarPagoscxc();
                        Buscar_cxc.restropagocxcCxpexitoso = false;
                        FormasdePagoSeleccionada = null;
                        
                        esllamadodesdeBuscarCXC = false;
                    } else {

                    }
                } else if ((f.getTipoPago().equalsIgnoreCase(OperacionesForms._DEPOSITO_TEXT)
                        || (f.getTipoPago().equalsIgnoreCase(OperacionesForms._TRANSFERENCIA_TEXT))) && jComboBox1.getSelectedItem().equals(f.getFormaPago())) {
                    FormasdePagoSeleccionada = f;
                    if (esllamadodesdeBuscarCXC) {
                        FormasdePagoSeleccionada = f;
                        Frame frame = JOptionPane.getFrameForComponent(this);
                        PagoDepositos pcdialog = new PagoDepositos(frame, true);
                        pcdialog.formaPago = jComboBox1.getSelectedItem().toString();
                        pcdialog.esllamadoRegistrarCXC_CXP = true;
                        OperacionesForms.registrarDepositocxc(pcdialog, txt_entrada.getText(), cli, secuenciaFac, OperacionesForms._FORMA_PAGO_CXC_TEXT);
                        pcdialog.setLocationRelativeTo(frame);

                        if (esllamadodesdeBuscarCXC) {
                            RegistrarPagoscxc();
                            FormasdePagoSeleccionada = null;
                            esllamadodesdeBuscarCXC = false;
                            
                        } else {

                        }

                    } else {

                    }
                }
                /*
                 
                 */

            }
        }

    }

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

        if (evt.getStateChange() == 1) {
            if (esllamadodesdeBuscarCXC) {
                registrarPago();
                Buscar_cxc.llenarListaCXC(Buscar_cxc.codigoCxcSeleccionada);
            }

        }


    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void bnt_siguenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_siguenteActionPerformed
        if (Buscar_cxc.codigoCxcSeleccionada > 0) {
            codigocxc = Buscar_cxc.codigoCxcSeleccionada;
            registrarPago();

        } else {
            ProgressBar.mostrarMensajeAzul("ERROR MENSAJE");
        }

    }//GEN-LAST:event_bnt_siguenteActionPerformed

    private void txt_entradaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_entradaKeyReleased
        // TODO add your handling code here:
        validaingresodevalordelPAGO();
    }//GEN-LAST:event_txt_entradaKeyReleased

    private boolean validaingresodevalordelPAGO() {
        boolean exitoso = true;
        if (ValidaNUmeros.isOnlyDouble(txt_entrada.getText())) {

            if (Double.valueOf(txt_total.getText()) >= Double.valueOf(txt_entrada.getText())) {

                total = Double.valueOf(txt_total.getText().replace(",", "."));
                if (txt_entrada.getText().contains(",")) {
                    abono = Double.valueOf(txt_entrada.getText().replace(",", "."));
                } else {
                    abono = Double.valueOf(txt_entrada.getText());
                }

                saldo = total - abono;

                String sald = String.valueOf(String.format("%.4f", saldo));
                saldo = Double.valueOf(sald.replace(",", "."));

                txt_saldo.setText(String.valueOf(saldo));
                exitoso = true;
            } else {
                //  Deb.consola("Vista.Usuarios.PagoCredito.txt_entradaKeyReleased()auuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu");
                exitoso = false;
                JOptionPane.showMessageDialog(null, "El valor de Entrada del Credito no puede ser Mayor al Total de la Venta");
                txt_entrada.requestFocus();
                txt_entrada.setText("0.0");
                txt_saldo.setText(txt_total.getText());
                txt_entrada.selectAll();

            }
        } else {
            exitoso = false;
            txt_entrada.setText("0.0");
            txt_entrada.selectAll();
        }
        return exitoso;
    }

    private void RegistrarPagoscxc() {

        if (validaingresodevalordelPAGO()) {

            Double entradax = Double.parseDouble(txt_entrada.getText());
            if (!entradax.equals(0.0)) {
                CajasDetalle cd = new CajasDetalle();
                CajasDetalleDao cajaDetalleDao = new CajasDetalleDao();
                /////////// DETALLE DE CAJA
                cd.setCajas_Codigo(login.codigoCaja);
                cd.setDetalle(Variables.CAJA_TIPO_INGRESO_CXC + FormasdePagoSeleccionada.getFormaPago() + " - " + jComboBox1.getSelectedItem().toString() + " # " + secuenciaFac + " EN EQUIPO: " + login.nombreDelEquipo + " USUARIO: " + login.nombresUsuario);
                cd.setDescripcion(txtDetalle.getText());
                cd.setDocumento(tipoDocumento);
                cd.setFecha(jdfecha.getDate());
                cd.setTipo(Variables.CAJA_TIPO_INGRESO_CXC);
                cd.setValor(Double.parseDouble(txt_entrada.getText()));
                cd.setCodigoDocuemnto(Buscar_cxc.codigoCxcSeleccionada);
                /////////////

                ///////// regsira pago
                Pagos p = new Pagos();
                PagosDao pdao = new PagosDao();
                p.setDescripcion(txtDetalle.getText());
                p.setCxc_codigo(codigocxc);
                p.setNota("");
                p.setTipo(jComboBox1.getSelectedItem().toString());
                p.setTotal(abono);
                p.setVisible(1);

                ///////
                ////ACTUALIZAR CUENTA POR COBRAR
                Cxc cc = new Cxc();
                cxcDao ccDao = new cxcDao();

                cc = ccDao.listarBuscarConCodigo(codigocxc);
                cc.setDescripcion(cc.getDescripcion() + " REGISTRO DE PAGO POR EL VALOR DE: " + txt_entrada.getText() + " CON SALDO: " + txt_saldo.getText());
                Double abonox = 0.0;
                abonox = Double.parseDouble(cc.getAbono());
//                Double saldo = Double.parseDouble(cc.getSaldo());
//                Double abono = Double.parseDouble(cc.getAbono());
                Double abonohoy = Double.parseDouble(txt_entrada.getText());
                String abh = String.valueOf(String.format("%.4f", abonohoy));
                abonohoy = Double.parseDouble(abh.replace(",", "."));
                Double abonototal = abonox + abonohoy;
                //Double abono = Double.parseDouble(cc.getAbono());
                cc.setAbono(String.valueOf(abonototal));
                cc.setSaldo(txt_saldo.getText());
                cc.setVisible(1);
                Double saldox = Double.parseDouble(txt_saldo.getText());
                if (saldox.equals(0.0)) {
                    cc.setEstado("CANCELADO");
                }
                ComitsAll c = new ComitsAll();
                //sdf

                if (FormasdePagoSeleccionada.getTipoPago().equalsIgnoreCase(OperacionesForms._EFECTIVO_TEXT) && jComboBox1.getSelectedItem().equals(FormasdePagoSeleccionada.getFormaPago())) {
                    if (c.registrarPagoCXCEfectivo(cd, p, cc) > 0) {
                        Buscar_cxc.restropagocxcCxpexitoso = true;
                        Buscar_cxc.actualizarjtablecxcdespuesregistrarPAgo();
                        ProgressBar.mostrarMensajeAzul("Nuevo pago en efectivo registrado..");
                        this.dispose();
                    } else {
                        Buscar_cxc.restropagocxcCxpexitoso = false;
                        ProgressBar.mostrarMensajeAzul("Ha ocurrido un error al registrar el Pago en efectivo");
                    }
                }
                if (FormasdePagoSeleccionada.getTipoPago().equalsIgnoreCase(OperacionesForms._CHEQUE_TEXT) && jComboBox1.getSelectedItem().equals(FormasdePagoSeleccionada.getFormaPago())) {
                    if (c.registrarPagoCXCCheuqe(cd, p, cc, cheque) > 0) {
                        Buscar_cxc.restropagocxcCxpexitoso = true;
                        Buscar_cxc.actualizarjtablecxcdespuesregistrarPAgo();
                        ProgressBar.mostrarMensajeAzul("Nuevo pago con cheque registrado..");
                        this.dispose();
                    } else {
                        Buscar_cxc.restropagocxcCxpexitoso = false;
                        ProgressBar.mostrarMensajeAzul("Ha ocurrido un error al registrar el Pago en cheuqe ");
                    }
                }
                if (FormasdePagoSeleccionada.getTipoPago().equalsIgnoreCase(OperacionesForms._DEPOSITO_TEXT) && jComboBox1.getSelectedItem().equals(FormasdePagoSeleccionada.getFormaPago())) {

                    if (c.registrarPagoCXCDeposito(cd, p, cc, deposito) > 0) {
                        Buscar_cxc.restropagocxcCxpexitoso = true;
                        Buscar_cxc.actualizarjtablecxcdespuesregistrarPAgo();
                        ProgressBar.mostrarMensajeAzul("Nuevo pago con cheque registrado..");
                        this.dispose();
                    } else {
                        Buscar_cxc.restropagocxcCxpexitoso = false;
                        ProgressBar.mostrarMensajeAzul("Ha ocurrido un error al registrar el Pago en cheuqe ");
                    }
                }

            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnt_siguente;
    private javax.swing.JButton bnt_siguente1;
    public static javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static com.toedter.calendar.JDateChooser jdfecha;
    public static javax.swing.JTextArea txtDetalle;
    public static javax.swing.JTextField txt_entrada;
    public static javax.swing.JTextField txt_nombre;
    public static javax.swing.JTextField txt_saldo;
    public static javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables
}
